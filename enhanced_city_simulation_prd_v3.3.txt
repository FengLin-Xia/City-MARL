1. 项目概述
1.1 项目名称

增强城市模拟系统（Enhanced City Simulation System）

1.2 项目目标

构建基于多智能体的城市发展模拟系统，通过高斯核地价潜力场、统一投标决策、真实通勤轨迹与多时间尺度更新，呈现逐层“涟漪式”生长：内层满格 → 外层解锁。

1.3 核心特性

轻量多智能体（政府/企业/居民）协同但统一决策器落地

地价场驱动的选址与沿主干道首发

时间分层：慢（地价/设施）｜中（人口/需求）｜快（建筑）

冻结施工线与严格逐层外扩

住宅→商业滞后替代（Hysteresis）

公共用地强制介入（学校/医院/公园/广场）

轨迹热力与可视化（等值线/槽位/层进度）

1.4 一句话架构

政府定骨架：一条主走廊带 + 两个顶点（Hub1=商业/客运核，Hub2=工业/货运核）。
先带后点、先内后外：首季沿走廊两侧“街墙”排满，再由双顶点向外放射扩张，层层解锁。
统一决策：同一套槽位，商业/住宅/工业在同一决策器下按分数投标，中标落位（受配额与分区）。

2. 系统架构
2.1 整体架构
┌─────────────────┐    ┌─────────────────┐    ┌─────────────────┐
│   配置系统      │    │   逻辑系统      │    │   可视化系统    │
│  - 城市配置     │    │  - 地价场系统   │    │  - 渲染引擎     │
│  - 建筑配置     │    │  - 智能体系统   │    │  - 动画系统     │
│  - 智能体配置   │    │  - 轨迹系统     │    │  - 热力图显示   │
└─────────────────┘    └─────────────────┘    └─────────────────┘
         │                       │                       │
         └───────────────────────┼───────────────────────┘
                                 │
                    ┌─────────────────┐
                    │   数据系统      │
                    │  - 状态管理     │
                    │  - 输出系统     │
                    │  - 统计系统     │
                    └─────────────────┘

2.2 模块划分

配置模块（configs/）：城市/建筑/智能体/评分/地价/层规则

逻辑模块（logic/）：地价场、等值线、决策器、智能体、轨迹、替代、公建

可视化模块（viz/）：地价/热力/等值线/槽位/层进度/动画

数据模块（状态、输出、重建）

2.3 政府骨架系统

走廊带（条带）：主干道中心线 Γ；参数：setback_m、sigma_perp。
Road-L0 首发布置层：沿 Γ 两侧偏移线 L± 等弧长采样为槽位（商业 25–35m、住宅 30–45m、工业 35–55m），冻结为 layer=road_L0_*。
双顶点（两放射源）：Hub1（商业/客运）、Hub2（工业/货运），各向异性核（沿走廊方向更长）。
分区（zoning）：Hub1 半径优先商业、Hub2 半径优先工业，中段走廊优先住宅（优先=允许集/权重倾斜而非硬覆盖）。
配额与纪律：季度配额（quota_res/com/ind）；内层满格（含死槽容忍）→ 外层解锁。

3. 数据模型
3.1 城市状态（City State）
{
  "simulation_info": {
    "current_month": 0, "current_quarter": 0, "current_year": 0
  },
  "land_price_field": [[...]],            // 0~1 连续场（加权和 + 归一化）
  "land_price_stats": { "min": 0.03, "max": 0.97, "avg": 0.41 },
  "buildings": {
    "public": [...], "residential": [...], "commercial": [...], "industrial": [...]
  },
  "residents": [...],
  "trajectory_system": {
    "commute_heatmap": [[...]], "commercial_heatmap": [[...]],
    "combined": [[...]], "decay_rate": 0.8
  },
  "layers": [
    {
      "layer_id": "road_L0_residential", "layer_type": "road",
      "status": "active", "activated_quarter": 0,
      "capacity": 120, "dead_slots": 4, "capacity_effective": 116,
      "placed": 110, "density": 0.948,
      "slots": [{ "pos":[120,52], "used":true, "dead":false,
                  "allowed_types":["residential"] }]
    }
  ],
  "backbone_info": {
    "road_corridor": {"polyline":[[x,y],...]},
    "hub_commercial": [x,y],
    "hub_industrial": [x,y]
  },
  "hysteresis_flags": { /* 住改商候选与冷却 */ },
  "public_facilities": [ /* 设施+服务半径 */ ]
}

3.2 键名与单位约束（强制）

用地键名统一长名："commercial" | "industrial" | "residential"

单位统一：空间输入以像素存储、以 meters_per_pixel 转换比较（半径、间距等都以“米”为准）

4. 功能模块
4.1 时间系统

地价场更新：年度（或半年）、σ 渐进增长（指数趋稳）

建筑更新：季度批量（住宅 10–20、商业 5–12、工业 4–10、公共 1–3）

人口/热力：月度，热力 20% 衰减

每月：居民轨迹→热力（f_heat）→设施可达修正（f_access）
每季：若有待激活层→以“当前地价”提取等值线→冻结施工线与槽位→统一投标决策落位
每年：地价场演化（σ_hub/σ_road 增长），并影响未来将激活的外层

4.1.1 特征与评分系统（v3.3 核心修复）

槽位特征（features）：

f_price：地价（从 land_price_field[y,x] 直接读取，0~1）必选

f_road：到走廊线 Γ 的法向核 exp(-d⊥²/2σ⊥²)

f_hub_com：商业顶点核（各向异性高斯，沿线更长）

f_hub_ind：工业顶点核（各向异性或差分，避开商业热点）

f_access：公共设施可达（服务半径内按 1−d/r 衰减取最大）

f_heat：居民热力（近邻密度指数衰减）

crowding / junction_penalty：拥挤/路口惩罚

统一打分函数（同形不同权；新增 f_price 并入）：

商业
score_com = 0.35*f_price + 0.25*f_hub_com + 0.20*f_road + 0.15*f_heat + 0.05*f_access - 0.03*crowding - 0.02*junction

工业
score_ind = (-0.20)*f_price + 0.45*f_hub_ind + 0.25*f_road + 0.05*f_access - 0.10*crowding - 0.05*junction

住宅
score_res = 0.10*f_price + 0.45*f_road + 0.15*f_access - 0.15*f_hub_com - 0.10*f_hub_ind - 0.05*crowding

权重可配置；方向性建议：商业偏好高价，工业偏好低价，住宅居中且偏“靠路+设施”。

4.2 轨迹系统

日程：住宅→工作→购物→住宅

热力：每次移动累积，月度衰减 20%，输出通勤/商业/综合热力层

对评分的作用：进入 f_heat（商业对人流敏感、住宅次之、工业弱）

4.3 智能体系统（轻量聚合，统一决策器落地）

政府（Policy）：骨架/分区/配额/公共用地 → 影响允许集与数量

企业（Supply）：按类型对激活层槽位投标（由评分系统计算）；不直接落位

居民（Demand）：提供住宅需求/消费强度，影响配额与热力

4.4 高斯核地价潜力场系统（v3.3 修订）

核函数

点核（枢纽）：H_c, H_i 为 2D/各向异性高斯

线核（道路）：R = exp(-d⊥²/2σ_road²)（可加沿线衰减变“管状核”）

走廊核（可选）：C（tanh/高斯型），用于锁定走廊骨架（不破坏连续性）

融合（弃用 max，采用加权和+归一化）

𝑃
base
(
𝑥
)
=
𝑤
𝑟
𝑅
+
𝑤
𝑐
𝐻
𝑐
+
𝑤
𝑖
𝐻
𝑖
+
𝑤
𝑐
𝑜
𝑟
𝐶
+
𝑏
0
P
base
	​

(x)=w
r
	​

R+w
c
	​

H
c
	​

+w
i
	​

H
i
	​

+w
cor
	​

C+b
0
	​

𝑙
𝑎
𝑛
𝑑
_
𝑝
𝑟
𝑖
𝑐
𝑒
_
𝑓
𝑖
𝑒
𝑙
𝑑
=
c
l
i
p
(
𝑃
base
−
𝑝
𝑚
𝑖
𝑛
𝑝
𝑚
𝑎
𝑥
−
𝑝
𝑚
𝑖
𝑛
,
 
0
,
 
1
)
land_price_field=clip(
p
max
	​

−p
min
	​

P
base
	​

−p
min
	​

	​

,0,1)

可选软阈：对 land_price_field 应用 smoothstep(τ)，禁止硬阈置 0，避免平台与断裂。

时间演化：σ_hub, σ_road 按 σ(t)=σ_base·(1+(M−1)(1−e^{−g·t})) 渐进增长；影响未来将激活的层。

单位一致性：全部距离以“米”计算，像素×meters_per_pixel 转换。

4.5 建筑增长系统（逐层严格生长）

冻结施工线：层激活时，从当前 land_price_field 取对应用途的等值线 → 冻结 polyline + 槽位

逐层规则：density = placed / capacity_effective

density ≥ 95%（或死槽容忍后等效 100%）→ 标记 complete

仅当所有内层 complete → 外层方可激活

配额结转：当季剩余配额不跨层使用；可配置结转到下季同层

4.6 分带与等值线建筑生成（v3.3 对齐地价）

分带规则（法向距主干道）

前排（60–120m）：仅商业

住宅带（120–260m）：住宅为主（可允许少量商业）

外围（>260m）：混合

等值线来源与冻结（关键修订）

商业：从 land_price_field 取 高值阈列 P = 0.85 → 0.78 → 0.71 → …

工业：取 外侧优先或内侧优先 的序列（示例：0.60 → 0.70 → 0.80 → … 表示越外越优）

住宅：取目标带区（如 P∈[0.45,0.65]）的中心等值线或双等值带

在“层激活当季”提取当前地价等值线并冻结，几何后续不变

槽位化（slotting）

等弧长采样：商业 25–35m，住宅 35–55m，工业 35–55m

法向微偏移（≤1m）、切向抖动（≤0.5m）

死槽：被边界/公共用地/碰撞遮挡的槽位，标为 dead，不计有效容量

4.7 住宅 → 商业替代（Hysteresis）

条件：连续 2 季度 score_com > score_res + 0.15

冷却期：4 季度

保底：住宅占比 ≥ 35%

4.8 公共用地机制

触发：人口密度/可达性/建筑密度/商业密度阈值

效果：半径内 f_access 抬升；可对 f_price 轻微增益（≤+10–20%）

公共用地不消耗商住工配额，但可屏蔽槽位（dead）

4.9 生长流程（条带→放射）

Q0–Q1：沿走廊首发（Road-L0）

激活并冻结 road_L0_com/res/ind（两侧“街墙”位）

只在 road_L0_* 投放；满格（≥95%） 后标记 complete

期间可插入公共用地刷新 f_access

Q2+：双顶点放射 + 走廊外扩

当季**仅在“当前最内侧 active 层”**中标；层满→下季激活下一圈

激活时以当前地价提取等值线并冻结

视觉：一条“街墙” → 两端放射状外扩 → 中段平行带外涨

4.10 决策器（统一中标；长名键）

伪代码（v3.3 修订，含 f_price）：

def place_on_active_layer(active_layer, quotas, city_state):
    buckets = {"commercial": [], "residential": [], "industrial": []}
    for slot in active_layer.free_slots():
        feats = compute_features(slot)  # 包含 f_price
        scores = {
          "commercial":  dot(W_com, feats) if slot.allow("commercial")  else -inf,
          "residential": dot(W_res, feats) if slot.allow("residential") else -inf,
          "industrial":  dot(W_ind, feats) if slot.allow("industrial")  else -inf
        }
        winner = argmax(scores)
        if winner: buckets[winner].append((slot, scores[winner]))

    placed = []
    for k in ["commercial","residential","industrial"]:
        take = topN(buckets[k], quotas[k])   # 配额裁剪
        placed += place_with_collision_check(take)

    if active_layer.effective_density() >= 0.95:  # 死槽容忍
        active_layer.complete()
        schedule_activate_next_layer()  # 下季生效
    return placed

5. 可视化系统

顺序：网格 → 热力 → 道路/枢纽 → 地价等值线 → 冻结的施工线 → 槽位 → 建筑 → 居民 → 统计

槽位态：Free=空心圆；Used=实心圆；Dead=灰叉

层态：Active=高亮粗线；Complete=绿色勾

面板：每层进度、dead 槽位数、当季配额/落位数

动画：新建筑从槽位 0.6s 生长成 footprint

6. 输出系统
6.1 增量导出（与重建）

月 0：完整状态 building_positions_month_00.json

月 1…N：只导增量 building_delta_month_MM.json

提供 get_full_state_at_month(M) 重建（含缓存）

6.2 其他输出

city_state_output.json、trajectory_data.json

land_price_evolution.json、land_price_field_quarterly.json

facility_events.json、conversion_events.json

layer_state_quarterly.json（层/槽位状态）

simplified_buildings_MM.json/txt（API 友好的扁平格式）

渲染帧：month_MM.png、city_evolution.gif

7. 配置系统（示例，与键名/单位对齐）
"city": {
  "map_size": [110, 110],
  "meters_per_pixel": 2.0,
  "trunk_road": [[20,55],[90,55]],
  "transport_hubs": [[20,55],[90,55]]
},
"government_backbone": {
  "road_corridor": { "sigma_perp_m": 40,
    "setback_m": { "commercial": 8, "residential": 10, "industrial": 14 } },
  "hubs": {
    "commercial": { "sigma_perp_m": 30, "sigma_parallel_m": 90 },
    "industrial": { "sigma_perp_m": 35, "sigma_parallel_m": 110 }
  },
  "zoning": {
    "hub_com_radius_m": 350, "hub_ind_radius_m": 450,
    "mid_corridor_residential": true
  },
  "quotas_per_quarter": {
    "residential": [10,20], "commercial": [5,12], "industrial": [4,10]
  },
  "strict_layering": true, "dead_slots_ratio_max": 0.05
},
"gaussian_land_price_system": {
  "w_r": 0.6, "w_c": 0.5, "w_i": 0.5, "w_cor": 0.2, "bias": 0.0,
  "hub_sigma_base_m": 40, "road_sigma_base_m": 20,
  "hub_growth_rate": 0.03, "road_growth_rate": 0.02,
  "max_hub_multiplier": 2.0, "max_road_multiplier": 2.5,
  "normalize": true, "smoothstep_tau": 0.0
},
"scoring_weights": {
  "commercial":  { "f_price": 0.35, "f_hub_com": 0.25, "f_road": 0.20,
                   "f_heat": 0.15, "f_access": 0.05,
                   "crowding": -0.03, "junction_penalty": -0.02 },
  "industrial":  { "f_price": -0.20, "f_hub_ind": 0.45, "f_road": 0.25,
                   "f_access": 0.05, "crowding": -0.10, "junction_penalty": -0.05 },
  "residential": { "f_price": 0.10, "f_road": 0.45, "f_access": 0.15,
                   "f_hub_com": -0.15, "f_hub_ind": -0.10, "crowding": -0.05 }
},
"isocontour_layout": {
  "commercial":  { "levels": [0.85, 0.78, 0.71], "arc_spacing_m": [25,35] },
  "industrial":  { "levels": [0.60, 0.70, 0.80], "arc_spacing_m": [35,55] },
  "residential": { "band": [0.45, 0.65], "arc_spacing_m": [35,55] },
  "normal_offset_m": 1.0, "jitter_m": 0.5,
  "fallback_percentiles": { "enabled": true,
    "commercial": [95,90,85], "residential": [80,70,60,50], "industrial": [70,60,50] }
},
"progressive_growth": {
  "enabled": true,
  "strict_fill_required": true,
  "allow_dead_slots_ratio": 0.05,
  "carry_over_quota": false,
  "freeze_contour_on_activation": true
},
"landuse_hysteresis": { "delta_bid": 0.15, "L_quarters": 2,
  "cooldown_quarters": 4, "res_min_share": 0.35 },
"public_facility_rules": {
  "school":  { "trigger_population": 500, "service_radius": 500, "symbol": "🏫" },
  "hospital":{ "trigger_distance_threshold": 800, "service_radius": 800, "symbol": "🏥" },
  "park":    { "trigger_building_density": 0.6, "service_radius": 300, "symbol": "🌳" },
  "plaza":   { "trigger_commercial_density": 0.5, "service_radius": 400, "symbol": "🏛️" }
}

8. 验收标准（v3.3 口径）
主标准

地价一致性：落位时 f_price 的分布与建筑用途一致；

统计口径：以槽位为样本，计算“中标概率 vs f_price”的 Spearman 相关；商业/住宅/工业综合相关 ≥ 0.7

等值线一致性：每层的冻结施工线与激活当季的 land_price_field 等值线误差 ≤ 0.5m

几何等距：商业等值线平均法向间距 = 30m ±10%；住宅 = 40m ±10%

等弧长采样：沿单条等值线相邻建筑间距落在配置区间的占比 ≥ 90%

分带正确：前排无住宅；住宅主要落在带区

时间秩序：complete_at(road_L0) ≤ activated_at(P0_c/P0_i)

逐层严格性：任意季度，若存在外层 active/used，则所有内层必须 complete；层 density（考虑 dead 槽）=100% 方可激活外层

可视化与日志

面板显示：每层进度条、dead 槽位数、当季配额与落位数

决策日志：每个槽位保存 features/scores/winner（支持审计）

9. 开发计划（对齐 v3.3）

阶段1：地价融合改造（加权和+归一化+软阈，移除 max/硬截断）——1 天

阶段2：评分系统并入 f_price，配置与键名统一（commercial/industrial/residential）——0.5 天

阶段3：外层激活=当前地价取等值线并冻结（商业/工业/住宅三通道）——1 天

阶段4：分区/半径单位统一（米↔像素） 与 Road-L0 沿线等弧长采样——1 天

阶段5：可视化与验收统计（相关性、误差量测、审计）——1 天

阶段6：测试与优化——1 天

10. 风险评估与缓解

等值线抖动：σ 增长过快 → α 指数平滑 + “激活时冻结”

层卡死（死槽过多）：allow_dead_slots_ratio 容忍；必要时回退到次级等值线/分位数

外层激活过迟：设置 max_quarters_per_layer 或最低密度阈“软解锁”（可选）

公共用地过密：设施最小间距与优先级队列

键名/单位错配：在 CI 加 配置/单位/键名一致性校验

相关性不足：调大 w_price_com、收紧 f_road，并检查走廊核 C 的权重不会压平梯度

11. 版本历史

v3.3（当前）

地价场参与落位决策（新增 f_price）

融合改“加权和+归一化（可选软阈）”，弃用 max/硬截断

外层激活 = 当前地价提取并冻结，时间演化对“未来层”生效

Road-L0 改沿线等弧长采样；键名/单位/尺寸全面统一

验收口径加入“地价相关性 ≥ 0.7”“冻结等值线误差 ≤ 0.5m”

v3.2

政府骨架：走廊带 + 双顶点；统一决策器；槽位化与严格逐层

v3.1

冻结施工线、死槽容忍、层状态机与进度可视化

v3.0

高斯核地价场替代 SDF；输出/配置统一为地价术语

v2.3 及更早

时间分层、分带逻辑、住改商滞后、轨迹/热力

附：实现要点清单（落地检查）

 land_price_field 由 w_r R + w_c H_c + w_i H_i (+ w_cor C) + b 归一化得到

 compute_features() 写入 f_price = land_price_field[y,x]（0~1）

 scoring_weights 使用 长名键（commercial/industrial/residential）

 分区半径比较在“米侧”，像素乘 meters_per_pixel

 层激活时对当前地价运行 marching squares → 冻结 polyline+slots

 Road-L0 沿主干道两侧等弧长采样，不做面状网格

 输出/日志含 features/scores/winner，统计相关性与几何误差